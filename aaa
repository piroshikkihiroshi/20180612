●●●コーディング、単体テストプルリクまで
〇git
※VSCodeのコンソールから作業
・ローカルdevelopからブランチを切る
git checkout -b feature/ueda_userList_user_disableuser_05001_05002
・ステージング
※コミットしないもの
application.yml
application-test.properties
DatabaseTestBase.java
.で始まる奴
・コミットメッセージ例
ユーザ管理一覧とユーザ無効化の画面、APIを作成
・push
git push origin feature/ueda_userList_user_disableuser_05001_05002
※なんかローカルからpushするのトータスGITじゃないとできなくなった
pushしたいブランチにいてpush、リモートはあれば勝手に入る、なければ新規作成するんじゃないかな
※git.exe指定だったらfetch、プルとかできるからいけるかも

・一度ローカルブランチをバックアップし、リモートからpullして動作確認
　ブランチ切替
git checkout develop
・ローカルブランチ削除
git branch -D feature/ueda_userList_user_disableuser_05001_05002
・リモートから引っ張る
git pull origin feature/ueda_userList_user_disableuser_05001_05002
※application.yml
C:\repository\tss3cam-map-hmi\tss3cam-map-hmi\t3cmh-web-spring\src\main\resources\application.yml
    name: tss3cam-map-hmi
    password: password
※application-test.properties
C:\repository\tss3cam-map-hmi\tss3cam-map-hmi\t3cmh-common\src\test\resources\application-test.properties
spring.datasource.password=password

※間違ってリモートにpushしたブランチ消す
git push origin --delete feature/ueda_userList_user_disableuser_05001_05002

※一つ前のステージングに戻す 
git reset --soft HEAD~

※現在ブランチ名取得
git branch

※コンフリクトが起こるか確認
git merge --no-commit --no-ff origin/develop
取り消す
git merge --abort

※違うブランチからdevelopにマージする
git fetch origin
git pull origin develop

※コンフリクトしたら
・適当なフォルダで最新developをとってくる
git clone codecommit::ap-northeast-1://default@tss3cam-map-hmi --branch develop
おそらく
C:\repository\tss3cam-map-hmi\tss3cam-map-hmi\t3cmh-common\src\main\resources\messages.properties
C:\repository\tss3cam-map-hmi\tss3cam-map-hmi\t3cmh-web-spring\src\test\resources\messages-test.properties
とかだと思う
現在の自分の
・C:\repository\tss3cam-map-hmi\tss3cam-map-hmi\t3cmh-common\src\main\resources\messages.properties
C:\repository\tss3cam-map-hmi\tss3cam-map-hmi\t3cmh-web-spring\src\test\resources\messages-test.properties
を待避
※マージでdevelopを全部受け入れる(先にdevelopを最新にしておくこと)
git merge develop -X theirs
※ステージングに挙げてコミット

・足りない自分のやつを入れる
C:\tool\seri\12_messages_properties_add.ps1
※C:\ueda\work\messages.propertiesに自分のコンフリクト前ファイル格納すればマージご足りないプロパティを出してくれる


・プルリク
画面から操作
https://888577028002.signin.aws.amazon.com/console

※プルリクテンプレート

## 単体テスト結果
https://drive.aslead.cloud/procenter03/m.do?i=30006456722
TSS3画像取得システム_機能評価_T3CMH_05001_ユーザ管理一覧画面.xlsx

https://drive.aslead.cloud/procenter03/m.do?i=30006456724
TSS3画像取得システム_機能評価_T3CMH_API05001_ユーザ管理一覧取得.xlsx
TSS3画像取得システム_機能評価_T3CMH_API05002_ユーザ無効化.xlsx

## 該当ドキュメント
https://drive.aslead.cloud/procenter03/m.do?i=30005777971
TSS3画像取得システム_画面設計書_(T3CMH_05001)（ユーザ管理一覧画面）.xlsx

https://drive.aslead.cloud/procenter03/m.do?i=30005918404
TSS3画像取得システム_詳細設計書_フロントエンドイベント_T3CMH_FE05001_ユーザ管理一覧取得.xlsx

https://drive.aslead.cloud/procenter03/m.do?i=30005918407
TSS3画像取得システム_詳細設計書_フロントエンドサービス_T3CMH_FS05001_ユーザ管理一覧取得.xlsx
TSS3画像取得システム_詳細設計書_フロントエンドサービス_T3CMH_FS05002_ユーザ無効化.xlsx

https://drive.aslead.cloud/procenter03/m.do?i=30005918408
TSS3画像取得システム_詳細設計書_バックエンドAPI_T3CMH_API05001_ユーザ管理一覧取得.xlsx
TSS3画像取得システム_詳細設計書_バックエンドAPI_T3CMH_API05002_ユーザ無効化.xlsx

https://drive.aslead.cloud/procenter03/m.do?i=30005918409
TSS3画像取得システム_詳細設計書_バックエンドサービス_T3CMH_BS000020_ユーザ管理一覧取得.xlsx
TSS3画像取得システム_詳細設計書_バックエンドサービス_T3CMH_BS000021_ユーザ無効化.xlsx

## 備考
なし

・マタモ
@k-kugo CC @all【ユーザ編集コーディング、単体テスト完了】
上記コーディング完了し、単体テスト完了しましたのでプルリクを出しました。
また、コンフルにプルリクのURL追加しましたのでレビューのほどよろしくお願いします。
●●● プルリクEnd

●git備忘
〇現在のブランチを表示
git branch --show-current
〇developをローカルブランチにマージ
git checkout develop
git pull origin develop
git checkout ueda_user_register
git merge develop
〇新たなブランチを切る
git checkout -b ueda_user_tmp_register
〇ブランチ名変更
git branch -m feature/ueda_user_register

〇リモートブランチをローカルにブランチ切ってチェックアウト
git checkout -b feature/ueda_user_register_from_develop origin/feature/ueda_user_register_from_develop

〇mavenインストール
cd C:\repository\tss3cam-map-hmi\tss3cam-map-hmi
mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true && mvn install -Dmaven.test.skip=true
